
// See $GOPATH/src/github.com/plan-tools/go-plan/pservice/compile_proto.sh


syntax = "proto3";

package pservice;



service Pservice {

    rpc         BeginSession( ClientInfo )                      returns ( SessionInfo );

    rpc         ReportStatus( StatusQuery )                     returns ( StatusReply );

    rpc         QueryChannels( ChannelSearchParams )            returns ( PDIChannelList );

    rpc         OpenChannelEntryQuery( ChannelEntryQuery )      returns ( stream PDIEntry );

    rpc         PublishChannelEntry( PDIEntry )                 returns ( PStatus );

}


message StatusQuery {
                string         test_greeting            = 1;
}


message StatusReply {
                string         test_reply               = 1;
}



message ClientInfo {
                bytes           community_id            = 1;
                bytes           member_id               = 2;
                bytes           workstation_id          = 3;
}


message SessionInfo {
                string          session_token           = 1;
}



message PStatus {
                int32           status_code             = 1;
                string          status_msg              = 2;

}

message HeaderEntry {
                string          field_name              = 1;
    repeated    string          field_value             = 2;
}


message PDIChannelInfo {
                bytes           channel_id              = 1;
                bytes           access_channel_id       = 2;
                int64           access_channel_rev      = 3;
    repeated    HeaderEntry     header                  = 4;
}


message PDIChannelList {
    repeated    PDIChannelInfo  channels                = 1;
}


message PDIChannelProperties {
                string          channel_name            = 1;
                string          channel_desc            = 2;
    repeated    HeaderEntry     header                  = 4;
}




message PDIEntry {
                int32           entry_info              = 1;
                bytes           sig                     = 2;
                bytes           hash                    = 3;
                PDIEntryHeader  entry_header            = 4;
    repeated    PDIBodyPart     entry_parts             = 5;
}

message PDIEntryHeader {
                int32           verb                    = 1;
                bytes           channel_id              = 2;
                bytes           author_id               = 3;
                bytes           access_channel_id       = 4;
                int64           access_channel_rev      = 5;
                fixed64         time                    = 6;
    repeated    HeaderEntry     aux_header              = 7;
}


message PDIBodyPart {
    repeated    HeaderEntry     header                  = 1;
                bytes           content                 = 2;
}



message ChannelSearchParams {
                int32           flags                   = 1;   
}

message ChannelEntryQuery {
                int32           flags                   = 1;   
}




