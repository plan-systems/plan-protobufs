syntax = "proto3";
package crates;

option csharp_namespace = "PlanSDK.Crates";


// AssetFlags describes what kind of asset this is.
enum AssetFlags {
    NoFlags                         = 0;

    IsTex2D                         = 0x0001;
    IsSprite                        = 0x0002;
    IsMaterial                      = 0x0004;
    IsPlaceable                     = 0x0008;
    IsRectTransform                 = 0x0010;
    
    // Is UI means that this item is for UI/UX and meets additional requirements.
    IsUI                            = 0x0020;

    // HasIcon means that this Asset includes an icon with the same name (and has IsIcon set),
    HasIcon                         = 0x0100;

    // IsPrivate means this item is not intended for general use and is not normally visible. 
    IsPrivate                       = 0x0200;

    // IsSkybox means this is a transform containing a Skybox component.
    IsSkybox                        = 0x0400;
    
    // AutoScale means this asset should be placed with auto scale enabled by default.
    AutoScale                       = 0x0800;

    // IsSurface means this asset behaves like terrain and/or should be considered a constituent part of a scene.
    // These objects should be opaque and have colliders attached to them
    // e.g.  a building, a terrain formation, a wall
    IsSurface                       = 0x1000;

}



message AssetEntry {

    // Flags specifies properties about this asset.
                AssetFlags          AssetFlags                  = 1;
                string              URI                         = 2;
                string              Label                       = 3;
                string              UUID                        = 4;

    // CenterX and CenterZ specify the positional center of this asset (and are typically 0).
    // CenterY is the distance above the baseline (y=0) to the y center-point height of this asset.
    // Y is considered to be the *vertical* (up) direction and by convention rest on the plane y=0.
                float               CenterX                     = 5;
                float               CenterY                     = 6;
                float               CenterZ                     = 7;

    // Extents specify the extents as distance from the center to the extent of the asset on each axis.
                float               ExtentsX                    = 10;
                float               ExtentsY                    = 11;
                float               ExtentsZ                    = 12;

    }


message BundleManifest {

                string              ParentCrate                 = 1;

    // BundlePublicName is how the outside world names this bundle.
                string              BundlePublicName            = 2;

    // BundleBuildName is how this bundle is internally named.
	// This corresponds to the asset bundle's file name and is normalized to lower case invariant.
                string              BundleBuildName             = 3;

    repeated    AssetEntry          Assets                      = 10;

                bool                LoadAllHint                 = 20;

}

// CrateManifest is the top-level manifest/catalog for a PLAN asset module called a "crate".  
// Is contains catalog and type info that PLAN loads at runtime to know what's inside binary asset bundles without having to load them.
//
// A reference to a PLAN asset is via an asset path ID ("PID").
// An asset PID is a case sensitive POSIX-style pathname having the form:
//     assetPID := "cratePID/bundlePublicName[.BuildID]/assetName"
//
// where:
//     cratePID := "homeDomainName/crateID"
//
message CrateManifest {


    // DomainName identifies the publisher of this asset crate
    //
    // e.g. 
    //    "plan-systems.org"
    //    "themushroom.farm" 
    //    "the-smiths.family" 
                string              HomeDomain                  = 1;

    // CrateTitle is a human-readable title for this crate and can change without any repercussions (i.e. is purely optical)
                string              CrateTitle                  = 2;

    // CreateID uniquely identifies this crate (for the given crate's publisher/home domain).
    // This name identifies this crate and is permanent (or else existing path refs will be broken)
    //
    // e.g. 
    //    "plan-app"
    //    "about-plan-systems"
    //    "welcome-to-plan"
    //    "common"     
    //    "mycology-101"     
    //    "mycology-201"     
                string              CrateID                     = 3;
                
    // BuildID is a short string that identifies a particular crate build/version.
    // This value should have no spaces and only have '.', '_', or '-' (and should lead with an alpha-numeric)
    //
    // e.g.  "2021.1", "10308", "v1.2.0"
                string              BuildID                     = 4;

    // CreateDesc describes this crate in a brief phrase
                string              CreateDesc                  = 5;

    // BrowserBundle is the name of the bundle containing assets and info used to browse this crate.
                string              BrowserBundle               = 8;

    repeated    BundleManifest      Bundles                     = 10;

}
